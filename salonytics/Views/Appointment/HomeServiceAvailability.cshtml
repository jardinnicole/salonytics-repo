@model salonytics.Models.HomeServiceAvailabilityViewModel

@{
    ViewData["Title"] = "Home Service Availability";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <form asp-action="HomeServiceAvailability" method="get" id="availabilityForm">
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="branchId">Select Branch:</label>
                            <select asp-for="BranchId" class="form-control" id="branchId">
                                <option value="">Select Branch</option>
                                @foreach (var branch in Model.Branches)
                                {
                                    <option value="@branch.Value">@branch.Text</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="stylistId">Select Stylist:</label>
                            <select asp-for="StylistId" class="form-control" id="stylistId">
                                <option value="">Select Stylist</option>
                                @foreach (var stylist in Model.Stylists)
                                {
                                    <option value="@stylist.Value">@stylist.Text</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary">Get Available Dates</button>
            </form>

            <div id="availabilityDatesContainer" class="mt-3" style="display: none;">
                <form asp-action="SetHomeServiceAvailability" method="post" id="availabilityDatesForm">
                    <input type="hidden" asp-for="BranchId" />
                    <input type="hidden" asp-for="StylistId" />
                    <div class="form-group">
                        <label for="selectedDate">Select Dates for Home Service:</label>
                        <ul id="selectedDatesList" class="list-group">
                            <!-- Selected dates will be added here dynamically -->
                        </ul>
                    </div>
                    <div class="form-group mt-3">
                        <div class="row">
                            <div class="col">
                                <button type="button" class="btn btn-success" id="addDateBtn">Add Date</button>
                            </div>
                            <div class="col text-end">
                                <button type="submit" class="btn btn-primary">Set Availability</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const branchId = document.getElementById("branchId");
            const stylistId = document.getElementById("stylistId");
            const availabilityDatesContainer = document.getElementById("availabilityDatesContainer");
            const selectedDatesList = document.getElementById("selectedDatesList");
            const addDateBtn = document.getElementById("addDateBtn");

            // Function to check if branch and stylist are selected
            function checkSelection() {
                if (branchId.value && stylistId.value) {
                    availabilityDatesContainer.style.display = "block";
                } else {
                    availabilityDatesContainer.style.display = "none";
                }
            }

            // Initial check for visibility
            checkSelection();

            // Monitor changes in branch and stylist selection
            branchId.addEventListener("change", checkSelection);
            stylistId.addEventListener("change", checkSelection);

            // Function to add a new date input
            function addDateInput() {
                const listItem = document.createElement("li");
                listItem.className = "list-group-item d-flex justify-content-between align-items-center";

                const dateInput = document.createElement("input");
                dateInput.type = "date";
                dateInput.className = "form-control";
                dateInput.name = "SelectedDates";
                dateInput.required = true;

                const removeBtn = document.createElement("button");
                removeBtn.type = "button";
                removeBtn.className = "btn btn-danger btn-sm";
                removeBtn.textContent = "-";
                removeBtn.addEventListener("click", function () {
                    listItem.remove();
                });

                listItem.appendChild(dateInput);
                listItem.appendChild(removeBtn);
                selectedDatesList.appendChild(listItem);
            }

            // Add date selection logic
            addDateBtn.addEventListener("click", addDateInput);

            // Fetch stylists based on selected branch
            branchId.addEventListener("change", function () {
                const branchValue = branchId.value;
                stylistId.innerHTML = '<option value="">Select Stylist</option>';

                if (branchValue) {
                    fetch(`/Appointment/GetStylistsList?branchId=${branchValue}`)
                        .then(response => response.json())
                        .then(data => {
                            data.forEach(stylist => {
                                const option = document.createElement("option");
                                option.value = stylist.value;
                                option.textContent = stylist.text;
                                stylistId.appendChild(option);
                            });
                        })
                        .catch(error => console.error('Error fetching stylists:', error));
                }
            });
        });
    </script>
}

@section Styles {
    <style>
        .list-group-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .date-columns {
            column-count: 3; /* Divide dates into three columns */
            column-gap: 20px; /* Adjust gap between columns */
        }
    </style>
}
